(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[809],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return N}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),N=r,d=m["".concat(s,".").concat(N)]||m[N]||c[N]||i;return n?a.createElement(d,o(o({ref:t},u),{},{components:n})):a.createElement(d,o({ref:t},u))}));function N(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9871:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o=["components"],l={id:"sqljoin",title:"SQL Joining"},s={unversionedId:"SQL Notes/sqljoin",id:"SQL Notes/sqljoin",isDocsHomePage:!1,title:"SQL Joining",description:"The attributes in the same domain in the joined tables do not need to have same names.",source:"@site/docs/SQL Notes/Joining.md",sourceDirName:"SQL Notes",slug:"/SQL Notes/sqljoin",permalink:"/docs/SQL Notes/sqljoin",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/SQL Notes/Joining.md",version:"current",frontMatter:{id:"sqljoin",title:"SQL Joining"},sidebar:"tutorialSidebar",previous:{title:"SQL Grouping",permalink:"/docs/SQL Notes/sqlgroup"},next:{title:"Hello Algorithm",permalink:"/docs/Dynamic Programming/algointro"}},p=[{value:"JOIN and INNER JOIN",id:"join-and-inner-join",children:[]},{value:"NATURAL JOIN",id:"natural-join",children:[]},{value:"LEFT JOIN",id:"left-join",children:[]},{value:"Examples:",id:"examples",children:[]}],u={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The attributes in the same domain in the joined tables do not need to have same names."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"INNER JOIN"),"\uff1a\u5982\u679c\u8868\u4e2d\u6709\u81f3\u5c11\u4e00\u4e2a\u5339\u914d\uff0c\u5219\u8fd4\u56de\u884c"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"LEFT JOIN"),"\uff1a\u5373\u4f7f\u53f3\u8868\u4e2d\u6ca1\u6709\u5339\u914d\uff0c\u4e5f\u4ece\u5de6\u8868\u8fd4\u56de\u6240\u6709\u7684\u884c"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"RIGHT JOIN"),"\uff1a\u5373\u4f7f\u5de6\u8868\u4e2d\u6ca1\u6709\u5339\u914d\uff0c\u4e5f\u4ece\u53f3\u8868\u8fd4\u56de\u6240\u6709\u7684\u884c"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"FULL JOIN"),"\uff1a\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u8868\u4e2d\u5b58\u5728\u5339\u914d\uff0c\u5219\u8fd4\u56de\u884c"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SELF JOIN"),"\uff1a\u7528\u4e8e\u5c06\u8868\u8fde\u63a5\u5230\u81ea\u5df1\uff0c\u5c31\u597d\u50cf\u8be5\u8868\u662f\u4e24\u4e2a\u8868\u4e00\u6837\uff0c\u4e34\u65f6\u91cd\u547d\u540d\u4e86SQL\u8bed\u53e5\u4e2d\u7684\u81f3\u5c11\u4e00\u4e2a\u8868 "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"CARTESIAN JOIN")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"CROSS JOIN"),"\uff1a\u4ece\u4e24\u4e2a\u6216\u591a\u4e2a\u8fde\u63a5\u8868\u8fd4\u56de\u8bb0\u5f55\u96c6\u7684\u7b1b\u5361\u513f\u79ef ")),(0,i.kt)("div",{style:{zoom:.87},class:"text--center"},(0,i.kt)("img",{src:"https://i0.wp.com/www.globalsqa.com/wp-content/uploads/2020/05/sql_reddit.jpg?w=940&ssl=1",alt:"SQL joins"})),(0,i.kt)("h2",{id:"join-and-inner-join"},"JOIN and INNER JOIN"),(0,i.kt)("p",null,"On the basis of the column which is ",(0,i.kt)("strong",{parentName:"p"},"explicitly specified")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"ON")," clause. The resulting table will contain ",(0,i.kt)("strong",{parentName:"p"},"all")," the attributes from both the tables including ",(0,i.kt)("strong",{parentName:"p"},"common"),"/duplicated columns. INNER JOIN \u4e0e JOIN \u662f\u76f8\u540c\u7684\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"INNER JOIN")," or ",(0,i.kt)("inlineCode",{parentName:"strong"},"JOIN")," return the same result"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"JOIN")," is more useful when we specified conditions.(",(0,i.kt)("a",{parentName:"p",href:"https://www.geeksforgeeks.org/difference-between-natural-join-and-inner-join-in-sql/"},"Difference between Natural join and Inner Join in SQL"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT <attributes> \nFROM R INNER NOIN S\nWHERE <attribute in R> = <attribute in S>\n")),(0,i.kt)("p",null,"The following diagram illustrates the ",(0,i.kt)("inlineCode",{parentName:"p"},"INNER JOIN")," clause:"),(0,i.kt)("div",{style:{zoom:.67},class:"text--center"},(0,i.kt)("img",{src:"https://www.sqlitetutorial.net/wp-content/uploads/2015/12/SQLite-inner-join-venn-diagram.png",alt:"SQLite inner join venn diagram"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Orders.OrderID, Customers.CustomerName, Shippers.ShipperName\nFROM ((\n    Orders INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID) \n    INNER JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID);\n")),(0,i.kt)("p",null,"This logic is applied if you join more than 2 tables."),(0,i.kt)("div",{style:{zoom:.67},class:"text--center"},(0,i.kt)("img",{src:"https://www.sqlitetutorial.net/wp-content/uploads/2015/12/SQLite-Inner-Join-Example.png",alt:"SQLite inner join venn diagram"})),(0,i.kt)("h2",{id:"natural-join"},"NATURAL JOIN"),(0,i.kt)("p",null,"It creates an implicit join clause based on the ",(0,i.kt)("strong",{parentName:"p"},"common columns")," in the two tables being joined. It is based on ",(0,i.kt)("strong",{parentName:"p"},"same attribute name and datatypes"),". The resulting table will contain all the attributes of both the table but keep only ",(0,i.kt)("strong",{parentName:"p"},"one copy of each common column"),".(no ",(0,i.kt)("inlineCode",{parentName:"p"},"NO")," nor ",(0,i.kt)("inlineCode",{parentName:"p"},"HAVING")," conditions can be specified)"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If there are some tuples having different values of common attributes, these tuples will be discarded after joining together.")),(0,i.kt)("p",null,"A NATURAL JOIN can be an INNER join, a LEFT OUTER join, or a RIGHT OUTER join. The default is INNER join."),(0,i.kt)("p",null,"SQLite automatically finds the attributes to merge on."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM R NATURAL JOIN S\n")),(0,i.kt)("p",null,"If the SELECT statement in which the NATURAL JOIN operation appears has an asterisk (*) in the select list, the asterisk will be expanded to the following list of columns (in this order):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"All the common columns"),(0,i.kt)("li",{parentName:"ul"},"Every column in the first (left) table that is not a common column"),(0,i.kt)("li",{parentName:"ul"},"Every column in the second (right) table that is not a common column")),(0,i.kt)("p",null,"An asterisk qualified by a table name (for example, COUNTRIES.*) will be expanded to every column of that table that is not a common column."),(0,i.kt)("h2",{id:"left-join"},"LEFT JOIN"),(0,i.kt)("p",null,"Combines two relations on specific attributes."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM R LEFT JOIN S ON R.A = S.A\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT a, b\nFROM A\nLEFT JOIN B ON A.f = B.f\nWHERE search_condition\n")),(0,i.kt)("p",null,"The statement returns a result set that includes:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Rows in table A (left table) that have corresponding rows in table B."),(0,i.kt)("li",{parentName:"ol"},"Rows in the table A table and the rows in the table B filled with ",(0,i.kt)("inlineCode",{parentName:"li"},"NULL")," values in case the row from table A does not have any corresponding rows in table B.(can have different names)")),(0,i.kt)("p",null,"In other words, ",(0,i.kt)("strong",{parentName:"p"},"all rows in table A are included in the result set whether there are matching rows in table B or not"),"."),(0,i.kt)("p",null,"In case you have a ",(0,i.kt)("inlineCode",{parentName:"p"},"WHERE")," clause in the statement, the ",(0,i.kt)("inlineCode",{parentName:"p"},"search_condition")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"WHERE")," clause is applied after the matching of the ",(0,i.kt)("inlineCode",{parentName:"p"},"LEFT JOIN")," clause completes."),(0,i.kt)("p",null,"See the following illustration of the ",(0,i.kt)("inlineCode",{parentName:"p"},"LEFT JOIN")," clause between the A and B tables."),(0,i.kt)("div",{style:{zoom:.67},class:"text--center"},(0,i.kt)("img",{src:"https://www.sqlitetutorial.net/wp-content/uploads/2015/12/SQLite-left-join-example.png",alt:"left join"})),(0,i.kt)("p",null,"The following Venn Diagram illustrates the ",(0,i.kt)("inlineCode",{parentName:"p"},"LEFT JOIN")," clause."),(0,i.kt)("div",{style:{zoom:.67},class:"text--center"},(0,i.kt)("img",{src:"https://www.sqlitetutorial.net/wp-content/uploads/2015/12/SQLite-Left-Join-Venn-Diagram.png",alt:"left join"})),(0,i.kt)("p",null,"It is noted that ",(0,i.kt)("inlineCode",{parentName:"p"},"LEFT OUTER JOIN")," is the same as ",(0,i.kt)("inlineCode",{parentName:"p"},"LEFT JOIN")),(0,i.kt)("h2",{id:"examples"},"Examples:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Retrieve the product names and product colors that have been ordered by ALEX or CAROL:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-r"},'# CUSTOMER -> CUST_NO -> SALES_ORDER -> ORDER_NO -> SALES_ORDER_LINE -> PROD_NO -> PRODUCT -> NAME, COLOR\ndbGetQuery(mydb, \'SELECT PRODUCT.NAME, PRODUCT.COLOR \n        FROM CUSTOMER JOIN PRODUCT, SALES_ORDER, SALES_ORDER_LINE \n        WHERE CUSTOMER.NAME IN("ALEX", "CAROL") \n        AND CUSTOMER.CUST_NO = SALES_ORDER.CUST_NO\n        AND SALES_ORDER_LINE.ORDER_NO = SALES_ORDER.ORDER_NO\n        AND SALES_ORDER_LINE.PROD_NO = PRODUCT.PROD_NO\')\n\nNAME COLOR\n1 PANTS  BLUE\n2 PANTS  BLUE\n3 SOCKS WHITE\n'))),(0,i.kt)("li",{parentName:"ol"})),(0,i.kt)("hr",null))}c.isMDXComponent=!0}}]);
(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[70],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return N}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=s(n),N=i,k=d["".concat(p,".").concat(N)]||d[N]||u[N]||l;return n?a.createElement(k,r(r({ref:t},m),{},{components:n})):a.createElement(k,r({ref:t},m))}));function N(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var s=2;s<l;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8327:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var a=n(2122),i=n(9756),l=(n(7294),n(3905)),r=["components"],o={sidebar_position:2,id:"sqlnorm",title:"Normalization"},p={unversionedId:"SQL Notes/sqlnorm",id:"SQL Notes/sqlnorm",isDocsHomePage:!1,title:"Normalization",description:"Notion Notes",source:"@site/docs/SQL Notes/Normalization.md",sourceDirName:"SQL Notes",slug:"/SQL Notes/sqlnorm",permalink:"/docs/SQL Notes/sqlnorm",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/SQL Notes/Normalization.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"sqlnorm",title:"Normalization"},sidebar:"tutorialSidebar",previous:{title:"SQL Overview",permalink:"/docs/SQL Notes/sqlintro"},next:{title:"Ordering",permalink:"/docs/SQL Notes/sqlorder"}},s=[{value:"What is a good relation design (Well-Structured Relation)?",id:"what-is-a-good-relation-design-well-structured-relation",children:[]},{value:"Normalization",id:"normalization",children:[]},{value:"<u>Anormalies</u> | Example: Relation TA",id:"anormalies--example-relation-ta",children:[]},{value:"<u>Normal Forms</u>",id:"normal-forms",children:[{value:"<u>First Normal Form\uff081NF)</u>",id:"first-normal-form\uff081nf",children:[]},{value:"Decompose Into 1NF",id:"decompose-into-1nf",children:[]},{value:"<u>Second Normal Form (2NF)</u>",id:"second-normal-form-2nf",children:[]},{value:"Decompose into 2NF",id:"decompose-into-2nf",children:[]}]},{value:"Example: Relation TA Continued",id:"example-relation-ta-continued",children:[{value:"Normalize the TA relation to comply with 2NF",id:"normalize-the-ta-relation-to-comply-with-2nf",children:[]},{value:"<u>Third Normal 3NF</u>",id:"third-normal-3nf",children:[]},{value:"Transitive Functional Dependencies",id:"transitive-functional-dependencies",children:[]},{value:"A simple example of 3NF",id:"a-simple-example-of-3nf",children:[]},{value:"Decompose into 3NF",id:"decompose-into-3nf",children:[]}]}],m={toc:s};function u(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.notion.so/lavendershuo/Lecture-18-Normalization-03a84694d3a64e54a5c0622ae4332bac"},"Notion Notes")),(0,l.kt)("h2",{id:"what-is-a-good-relation-design-well-structured-relation"},"What is a good relation design (Well-Structured Relation)?"),(0,l.kt)("p",null,"We have seen how to create a new relation from a given schema."),(0,l.kt)("p",null,"We know that the following ",(0,l.kt)("strong",{parentName:"p"},"rules")," must apply to relations:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Entity Integrity:\nFor each tuple in a relation attributes that belong to the ",(0,l.kt)("strong",{parentName:"li"},"primary")," key must be ",(0,l.kt)("strong",{parentName:"li"},"non-null")),(0,l.kt)("li",{parentName:"ol"},"Referential Integrity:\nAll ",(0,l.kt)("strong",{parentName:"li"},"foreign")," key attribute values in a relation must be either ",(0,l.kt)("strong",{parentName:"li"},"null")," or correspond to a ",(0,l.kt)("strong",{parentName:"li"},"primary")," key value"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Duplication")," of tuples in a relation is ",(0,l.kt)("strong",{parentName:"li"},"not")," allowed."),(0,l.kt)("li",{parentName:"ol"},"Next, we look at: - ",(0,l.kt)("strong",{parentName:"li"},"Normalization"))),(0,l.kt)("p",null,"Basically, a well-structured relation is\n",(0,l.kt)("strong",{parentName:"p"},"a relation that contains minimal data redundancy and allows users to insert, delete, and update rows without causing data inconsistencies."),"\nIts goal is to avoid (minimize) anomalies:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Insertion Anomaly: adding new rows forces user to create duplicate data"),(0,l.kt)("li",{parentName:"ul"},"Deletion Anomaly: deleting a row may cause loss of other data representing completely different facts"),(0,l.kt)("li",{parentName:"ul"},"Modification Anomaly: changing data in a row forces\nchanges to other rows because of duplication")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"General rule of thumb: a table should not pertain to more than one entity type")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"normalization"},"Normalization"),(0,l.kt)("p",null,"Normalization is ",(0,l.kt)("strong",{parentName:"p"},"a technique used to organize the data")," in a database."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Normalization consists of ",(0,l.kt)("strong",{parentName:"li"},"a set of rules")," that all relations must follow for a database(DB) to be well structured."),(0,l.kt)("li",{parentName:"ul"},"These ",(0,l.kt)("strong",{parentName:"li"},"rules")," are presented as sets of restrictions called ",(0,l.kt)("strong",{parentName:"li"},"NORMAL FORMS"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Normalization")," is the ",(0,l.kt)("strong",{parentName:"p"},"process")," of creating a DB that complies with these ",(0,l.kt)("strong",{parentName:"p"},"restrictions"),". We do that by normalizing each of the relations."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Normal forms:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"1NF (First Normal Form)"),(0,l.kt)("li",{parentName:"ul"},"2NF (Second Normal Form)"),(0,l.kt)("li",{parentName:"ul"},"3NF (Third Normal Form)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("del",{parentName:"li"},"4NF, 5NF, 6NF......")," It's not always a good idea to normalize beyond 3NF.")))),(0,l.kt)("p",null,"Applying these rules ",(0,l.kt)("strong",{parentName:"p"},"removes undesirable properties")," from a DB, including the ",(0,l.kt)("strong",{parentName:"p"},"removal of data anomalies"),":\n",(0,l.kt)("inlineCode",{parentName:"p"},"UPDATE ANOMALY"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"INSERTION ANOMALY"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"DELETION ANOMAL")),(0,l.kt)("h2",{id:"anormalies--example-relation-ta"},(0,l.kt)("u",null,"Anormalies")," | Example: Relation TA"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/96b8f42d-7d39-4836-9f6c-1c9a2f7c9901/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T222836Z&X-Amz-Expires=86400&X-Amz-Signature=7a6411e633bb3651bd7d344d5412e98b28a8590e9b7010a0713b52b0655be82c&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22",alt:"TA Relation"})),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The relation TA is not normalized. Why does this matter?")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"What are the CANDIDATE KEYS of TA?"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"{TA_ID, TA_DEPT}"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"What is the PRIMARY KEY of TA?"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"{TA_ID, TA_DEPT}"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("div",{style:{color:"tomato"}},(0,l.kt)("h4",null,"UPDATE ANOMALY")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Ann belongs to ",(0,l.kt)("strong",{parentName:"li"},"two departments")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"If Ann's address changes, we will need to update two tuples, to avoid ambiguity"))),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("div",{style:{color:"tomato"}},(0,l.kt)("h4",null,"INSERTION ANOMALY")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Suppose a new TA has been appointed but does not yet know which department they will work in.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"We cannot put a ",(0,l.kt)("inlineCode",{parentName:"strong"},"NULL")," to ",(0,l.kt)("inlineCode",{parentName:"strong"},"TA_DEPT")," because primary key value cannot be NULL.")),(0,l.kt)("li",{parentName:"ul"},"We would ",(0,l.kt)("strong",{parentName:"li"},"not be able to INSERT")," the data into the relation. \u2014> INSERTION ANOMALY")),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("div",{style:{color:"tomato"}},(0,l.kt)("h4",null,"DELETION ANOMALY")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Suppose the BIOLOGY ",(0,l.kt)("strong",{parentName:"li"},"department is closed down")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Deleting tuples with attribute value BIOLOGY in TA_DEPT would delete the information about Bob")," \u2014 we ",(0,l.kt)("strong",{parentName:"li"},"do not want to remove Bob"),"'s TA_ID, TA_ADDRESS, and other information \u2014 thus a DELETION ANOMALY")),(0,l.kt)("p",null,"How do we resolve or avoid anomalies?"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"To resolve or avoid anomalies, we need to ",(0,l.kt)("em",{parentName:"li"},"normalize")," relations"),(0,l.kt)("li",{parentName:"ul"},"We will continue the above example later in the lecture, after we have discussed 1NF and 2NF.")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"normal-forms"},(0,l.kt)("u",null,"Normal Forms")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Normalization consists of a set of rules that all relations must follow for a database(DB) to be well structured.\nThese rules are presented as sets of restrictions called NORMAL FORMS.")),(0,l.kt)("h3",{id:"first-normal-form\uff081nf"},(0,l.kt)("u",null,"First Normal Form\uff081NF)")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Each attribute ",(0,l.kt)("strong",{parentName:"em"},"name")," must consist of a ",(0,l.kt)("strong",{parentName:"em"},"single")," ",(0,l.kt)("strong",{parentName:"em"},"item"),".")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Each attribute ",(0,l.kt)("strong",{parentName:"em"},"value")," must represent a ",(0,l.kt)("strong",{parentName:"em"},"single")," ",(0,l.kt)("strong",{parentName:"em"},"fact"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/04723470-f753-4b63-b1ec-ad2ac4d82ab7/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T230417Z&X-Amz-Expires=86400&X-Amz-Signature=eb58891e019b88bfd22cc5fe3c5f431dab529d1c5a1f3e90d3465c5f32a3620f&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22",alt:"Course_Content"})),(0,l.kt)("p",null,"A single fact:"),(0,l.kt)("p",null,"Anne is a single fact regarding FirstName; PSTAT 10 is a single fact regarding Course#......"),(0,l.kt)("h4",{id:"example-relation-course_content"},"Example: Relation COURSE_CONTENT"),(0,l.kt)("p",null,"A DB design team has been working on the relationships between each COURSE and its SYLLABUS in the Statistics Department. They suggest the following relation."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/18ef94d7-53c7-49cd-b0b3-7b703db5cad3/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T230510Z&X-Amz-Expires=86400&X-Amz-Signature=470a04f371263f5fab6ca21491075614644079d3708ef1c205674d3f14d044cd&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22",alt:"Lecture%2018%20Normalization%207b2eae7c64944ebd929ecebffb209517/Untitled%202.png"})),(0,l.kt)("p",null,"COURSE #: PSTAT10, PSTAT126 \u2014\u2014 OK"),(0,l.kt)("p",null,"SYLLABUS: R,SQL Regression, R \u2014\u2014 ",(0,l.kt)("strong",{parentName:"p"},"two")," separate facts"),(0,l.kt)("p",null,"Thus COURSE_CONTENT Not in 1NE"),(0,l.kt)("h4",{id:"example-decomposing-a-relation-into-first-normal-form1nf"},"Example: Decomposing A Relation Into First Normal Form(1NF)"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNgy1gqwy8n6mhpj30ju0eomzh.jpg",alt:"https://tva1.sinaimg.cn/large/008i3skNgy1gqwy8n6mhpj30ju0eomzh.jpg"})),(0,l.kt)("p",null,"R, SQL for PSTAT10 become ",(0,l.kt)("strong",{parentName:"p"},"separate")," ",(0,l.kt)("strong",{parentName:"p"},"tuples"),"."),(0,l.kt)("p",null,"So COURSE_CONTENT2 is in 1NF"),(0,l.kt)("p",null,"A new example:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNgy1gqwyb874nej30gu0ds0uu.jpg",alt:"https://tva1.sinaimg.cn/large/008i3skNgy1gqwyb874nej30gu0ds0uu.jpg"})),(0,l.kt)("p",null,"It violates both rules for 1NF"),(0,l.kt)("h3",{id:"decompose-into-1nf"},"Decompose Into 1NF"),(0,l.kt)("h4",{id:"example-course_content_3"},"Example: COURSE_CONTENT_3"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNgy1gqwyd8q7qrj30lc0aywgk.jpg",alt:"COURSE_CONTENT_3"})),(0,l.kt)("p",null,"Not in 1NF"),(0,l.kt)("p",null,"Because there 2 tuple values in COURSE_CONTENT"),(0,l.kt)("p",null,"We can decompose it:"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNgy1gqwyep49exj30nc0ekgo4.jpg",alt:"COURSE_CONTENT_4"})),(0,l.kt)("p",null,"In 1NF"),(0,l.kt)("h3",{id:"second-normal-form-2nf"},(0,l.kt)("u",null,"Second Normal Form (2NF)")),(0,l.kt)("p",null,"A relation is in 2NF if both of the following conditions hold:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"It is in ",(0,l.kt)("strong",{parentName:"li"},"1NF")," (first normal form)."),(0,l.kt)("li",{parentName:"ul"},"No non-prime attribute is functionally dependent on a proper subset of any candidate key.")),(0,l.kt)("h4",{id:"non-prime-attribute"},"Non-prime attribute"),(0,l.kt)("p",null,"An attribute that is ",(0,l.kt)("strong",{parentName:"p"},"not part of any candidate key")," is a NON-PRIME ATTRIBUTE."),(0,l.kt)("h4",{id:"-functionally-dependent"},"\u2728 Functionally dependent"),(0,l.kt)("p",null,"If a set of attributes A of a relation ",(0,l.kt)("strong",{parentName:"p"},"uniquely identifies")," a set of attributes B of the same relation, then ",(0,l.kt)("strong",{parentName:"p"},"B is FUNCTIONALLY DEPENDENT on A"),".\nWritten: ",(0,l.kt)("inlineCode",{parentName:"p"},"A--\x3eB")," (just one long arrow)\n\u2022 Functional Dependency: The value of one attribute (the determinant) determines the value of another attribute.\n\u2013 A--\x3eB reads \u201cAttribute B is functionally dependent on A\u201d\n\u2013 A--\x3eB means ",(0,l.kt)("strong",{parentName:"p"},"if two rows have same value of A they necessarily have same value of B"),"\n\u2013 FDs are determined by semantics: You can\u2019t say that a FD exists just by looking at data. But can say whether it does not exist by looking at data."),(0,l.kt)("h4",{id:"proper-subset"},"Proper subset"),(0,l.kt)("p",null,"A proper subset of a set A is a subset of A that is not equal to A."),(0,l.kt)("h4",{id:"example-functional-dependencies-fds"},"Example: Functional Dependencies (FD's)"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"If a set of attributes A of are relation uniquely identifies a set of attributes B of the same relation, then B is FUNCTIONALLY DEPENDENT on A. Written:A---\x3eB")),(0,l.kt)("p",null,"Schema: ",(0,l.kt)("strong",{parentName:"p"},"STUDENT (ID, NAME, ADDRESS)")),(0,l.kt)("p",null,"{ID} uniquely identifies the following sets of attributes {NAME}, {ADDRESS}, {NAME, ADDRESS}"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"If {ID} uniquely identifies {NAME, ADDRESS}, then it also uniquely identifies {NAME} and {ADDRESS}."))),(0,l.kt)("p",null,"NAME and ADDRESS are both FUNCTIONALLY DEPENDENT on ID. Written:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"{ID}---\x3e{NAME}"),(0,l.kt)("li",{parentName:"ul"},"{ID}---\x3e{ADDRESS}"),(0,l.kt)("li",{parentName:"ul"},"{ID}---\x3e{NAME, ADDRESS}")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"(Not required to use {}, just be absolutely clear about what you're meaning)")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Theory of relational database replies on advanced set theory. It's mathematically precise and consistent. If you do more work in database, you will need to understand quite a lot of set theory before you can continue.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Continued"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ID---\x3e{NAME} (read: ",(0,l.kt)("strong",{parentName:"li"},"NAME is functionally dependent on ID"),")"),(0,l.kt)("li",{parentName:"ul"},"ID---\x3e{ADDRESS}"),(0,l.kt)("li",{parentName:"ul"},"ID---\x3e{NAME, ADDRESS}")),(0,l.kt)("p",null,"ID---\x3e{NAME} can therefore also be read: ",(0,l.kt)("strong",{parentName:"p"},"ID functionally determines NAME")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"You should be familiar with both of these terms with both functionally dependent and functionally determines."),(0,l.kt)("li",{parentName:"ul"},"MEANING:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"For any given ID, there can only be one name. Similarly, for address."))),(0,l.kt)("li",{parentName:"ul"},"However, it would be ",(0,l.kt)("strong",{parentName:"li"},"incorrect to write NAME--\x3e{ID}"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"MEANING:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"For any given NAME, ",(0,l.kt)("strong",{parentName:"li"},"there can only be one ID")," \u2014\u2014 not the case"),(0,l.kt)("li",{parentName:"ul"},"NAME functionally determines ID and ID is functionally determined by NAME")))))),(0,l.kt)("h4",{id:"example-2nf-relation-school"},"Example: 2NF Relation SCHOOL"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNly1gqwz1p38r2j30j60bmmz4.jpg",alt:"SCHOOL"})),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Is the relation SCHOOL in 1NF?"),(0,l.kt)("p",{parentName:"li"},"YES")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Are there any ",(0,l.kt)("strong",{parentName:"p"},"non-prime attributes that are functionally dependent on a proper subset of any candidate key"),"?"),(0,l.kt)("p",{parentName:"li"},"If so, the relation is ",(0,l.kt)("strong",{parentName:"p"},"not")," in 2NF."),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Candidate key: ",(0,l.kt)("strong",{parentName:"p"},"{FACULTY_ID, CLASS}"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Proper subsets of candidate keys: {FACULTY_ID},{CLASS}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Non-Prime attributes: {FACULTY, AGE}\n(",(0,l.kt)("em",{parentName:"p"},"An attribute that is not part of any candidate key is a non-prime attribute"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Identify Functional Dependencies (FD's) associated with non-prime attributes.")),(0,l.kt)("p",{parentName:"li"},"Does ",(0,l.kt)("strong",{parentName:"p"},"FACULTY_ID---\x3e FACULTY_AGE")," hold? YES.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Non-prime attribute FACULTY_AGE is ",(0,l.kt)("strong",{parentName:"p"},"dependent")," on FACULY_ID which is a proper subset of the candidate key."))))),(0,l.kt)("p",null,"Therefore, the relation SCHOOL is ",(0,l.kt)("strong",{parentName:"p"},"not")," in 2NF."),(0,l.kt)("h4",{id:"why-does-whether-the-relation-is-2nf-or-not-matters"},"Why does whether the relation is 2NF or not ",(0,l.kt)("strong",{parentName:"h4"},"matters"),"?"),(0,l.kt)("p",null,"Because there are possibility of ",(0,l.kt)("strong",{parentName:"p"},"Update anomalies, Insertion anomalies and Deletion anomalies"),"."),(0,l.kt)("p",null,"Try to think of some possible anomalies."),(0,l.kt)("h4",{id:"summary-of-examples-so-far"},"Summary of examples so far"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Is the SCHOOL below in 1NF? \u2014\u2014 YES")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Candidate key: {FACULTY_ID, CLASS} and hence Primary Key Non-Prime attributes: FACULTY_AGE")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Relation not in 2NF")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The non-prime attribute FACULTY_AGE is functionally dependent on FACULTY_ID."),(0,l.kt)("p",{parentName:"li"},"This violates 2NF which requires that:"),(0,l.kt)("p",{parentName:"li"},"No non-prime attribute is ",(0,l.kt)("strong",{parentName:"p"},"functionally dependent")," on a proper subset of any candidate key."))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"decompose-into-2nf"},"Decompose into 2NF"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Steps"),":"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"When there is an FD, X--\x3eY on part of the candidate key(X is part of candidate key), ",(0,l.kt)("strong",{parentName:"li"},"form a new relation")," with ",(0,l.kt)("strong",{parentName:"li"},"X as primary key")," and with ",(0,l.kt)("strong",{parentName:"li"},"all the attributes determined by X.")," "),(0,l.kt)("li",{parentName:"ol"},"Form a new relation defined on the attributes of the ",(0,l.kt)("strong",{parentName:"li"},"candidate keys")," of the original relation and include ",(0,l.kt)("strong",{parentName:"li"},"all attributes that are not functionally determined by only part of the key"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example(continued):")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The candidate key is:{FACULTY_ID, CLASS}")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://tva1.sinaimg.cn/large/008i3skNly1gqwz1p38r2j30j60bmmz4.jpg",alt:"https://tva1.sinaimg.cn/large/008i3skNly1gqwz1p38r2j30j60bmmz4.jpg"})),(0,l.kt)("p",null,"Applying the steps to the SCHOOL relation"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"STEP 1")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"FACULTY",(0,l.kt)("em",{parentName:"li"},"ID ---\x3e FACULTY_AGE "),"(READ: FACULTY",(0,l.kt)("em",{parentName:"li"},"ID functionally determines FACULTY_AGE)")),(0,l.kt)("li",{parentName:"ul"},"Form a new relation with FACULTY_ID as primary key and FACULTY_AGE as attribute")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("img",{parentName:"p",src:"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/73f2fe72-5810-47bd-9afd-308aaecb36df/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T230712Z&X-Amz-Expires=86400&X-Amz-Signature=98ebacdf8fc66b4f7fd78e5a3e3f50953ad212bf8ce381d2f253e12932d6ba96&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22",alt:"SCHOOL_2"}))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"STEP 2")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Form a new relation defined on the attributes of the key of the original relation. New relation has FACULTY_ID, CLASS as attributes./>"),(0,l.kt)("li",{parentName:"ul"},"FACULTY_AGE is determined by only part of the key, so is not included.")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("img",{parentName:"p",src:"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/e39d4264-9108-4a52-841d-2c51fbe55c26/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T230746Z&X-Amz-Expires=86400&X-Amz-Signature=11c855357f161933221632ba3fd464f00ace8d4569131baf816eb45dc8dae3c4&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22",alt:"SCHOOL_3"})))),(0,l.kt)("h2",{id:"example-relation-ta-continued"},"Example: Relation TA Continued"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/96b8f42d-7d39-4836-9f6c-1c9a2f7c9901/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T222836Z&X-Amz-Expires=86400&X-Amz-Signature=7a6411e633bb3651bd7d344d5412e98b28a8590e9b7010a0713b52b0655be82c&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22",alt:"TA Relation"})),(0,l.kt)("h3",{id:"normalize-the-ta-relation-to-comply-with-2nf"},"Normalize the TA relation to comply with 2NF"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"TA is in 1NF")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Candidate key: ",(0,l.kt)("inlineCode",{parentName:"p"},"{TA_ID, TA_DEPT}"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Non-prime attributes: ",(0,l.kt)("inlineCode",{parentName:"p"},"{TA_NAME, TA_ADDRESS}"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Functional dependencies:"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"TA_ID---\x3e{TA_NAME, TA_ADDRESS}")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"TA_ID---\x3e{TA_NAME}")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"TA_ID---\x3e{TA_ADDRESS}")))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Non-prime attributes functionally ",(0,l.kt)("strong",{parentName:"p"},"dependent")," on proper subset of candidate key, so TA ",(0,l.kt)("strong",{parentName:"p"},"not")," in 2NF")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"So we need to ",(0,l.kt)("strong",{parentName:"p"},"decompose")," it into 2NF:"),(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Step 1: ",(0,l.kt)("em",{parentName:"p"},"When there is an FD, X--\x3eY on part of the candidate key, ",(0,l.kt)("strong",{parentName:"em"},"form a new relation")," with ",(0,l.kt)("strong",{parentName:"em"},"X as primary key")," and with ",(0,l.kt)("strong",{parentName:"em"},"all the attributes determined by X."))),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"FD: ",(0,l.kt)("inlineCode",{parentName:"li"},"TA_ID---\x3e{TA_NAME}")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"TA_ID---\x3e{TA_ADDRESS}")),(0,l.kt)("li",{parentName:"ul"},"Candidate keys: ",(0,l.kt)("inlineCode",{parentName:"li"},"{TA_ID, TA_DEPT}")),(0,l.kt)("li",{parentName:"ul"},"Form a new relation with TA_ID as primary key and TA_NAME and TA_ADDRESS as attributes")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("img",{parentName:"p",src:"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/002a62db-f55f-45ea-a8c9-e1c5b97ee3c3/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T230931Z&X-Amz-Expires=86400&X-Amz-Signature=d305d70a157d19ec9b3f9672e0899749975fabed33bc3a2da5319e6118503471&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22",alt:"TA2"})),(0,l.kt)("p",{parentName:"li"},"Duplicate tuples removed because of primary key in new relation")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Step 2: ",(0,l.kt)("em",{parentName:"p"},"Form a new relation defined on the attributes of the ",(0,l.kt)("strong",{parentName:"em"},"candidate keys")," of the original relation and include ",(0,l.kt)("strong",{parentName:"em"},"all attributes that are not functionally determined by only part of the key"),".")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Candidate keys: {TA_ID, TA_DEPT}"),(0,l.kt)("li",{parentName:"ul"},"{TA_NAME} and {TA_ADDRESS} are functionally determined by TA_ID, which is part of the key \u2014\u2014 so are not included in the new relation attributes"),(0,l.kt)("li",{parentName:"ul"},"New relation attributes: {TA_ID}, {TA_DEPT}")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("img",{parentName:"p",src:"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/9e56f63f-b919-4324-9c60-2524bbef6e7d/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T231004Z&X-Amz-Expires=86400&X-Amz-Signature=fa0531dd8cec713b58fbec73908ded50fb5ecdee1b40208652a223c155327db3&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22",alt:"TA3"})))))),(0,l.kt)("h4",{id:"update-anomaly"},"UPDATE ANOMALY"),(0,l.kt)("p",null,"Ann belongs to two departments. If Ann's ",(0,l.kt)("strong",{parentName:"p"},"address changes"),", we will need to update TWO tuples to avoid ambiguity."),(0,l.kt)("p",null,"Ann's address might be updated in MATH but not in STATS; an inconsistency."),(0,l.kt)("p",null,"Have we ",(0,l.kt)("strong",{parentName:"p"},"resolved the update anomaly"),"?"),(0,l.kt)("p",null,"Yes. We only need update ONE tuple. \u2014\u2014 ",(0,l.kt)("strong",{parentName:"p"},"update the first tuple in TA2")),(0,l.kt)("h4",{id:"insert-anomaly"},"INSERT ANOMALY"),(0,l.kt)("p",null,"Suppose a new TA has been appointed but does not yet know which department they will work in."),(0,l.kt)("p",null,"Have we ",(0,l.kt)("strong",{parentName:"p"},"resolve the INSERT anomaly"),"?"),(0,l.kt)("p",null,"Yes. We can record the new TA's details without having to specify their department."),(0,l.kt)("h4",{id:"delete-anomaly"},"DELETE ANOMALY"),(0,l.kt)("p",null,"Suppose the BIOLOGY department is closed down."),(0,l.kt)("p",null,"Deleting tuples with attribute value BIOLOGY in TA_DEPT would delete the information about Bob."),(0,l.kt)("p",null,"Have we ",(0,l.kt)("strong",{parentName:"p"},"resolve the DELETE anomaly"),"?"),(0,l.kt)("p",null,"Yes. We can delete biology department without deleting Bob's information."),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.notion.so/lavendershuo/Lecture-19-3NF-and-R-Review-882ec061fa174f63a7b50cf241ea3b29"},"3NF Lecture Notes")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"3NF quickly beyonds the scope of PSTAT10. All we need to know is the content mentioned in the powerpoint slides.")),(0,l.kt)("h3",{id:"third-normal-3nf"},(0,l.kt)("u",null,"Third Normal 3NF")),(0,l.kt)("p",null,"A relation is in 3NF if both of the following conditions hold:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"the relation is in ",(0,l.kt)("strong",{parentName:"li"},"2NF"),"."),(0,l.kt)("li",{parentName:"ol"},"there are no ",(0,l.kt)("strong",{parentName:"li"},"TRANSITIVE FUNCTIONAL DEPENDENCIES")," of NON-PRIME ATTRIBUTES on the primary key.")),(0,l.kt)("h3",{id:"transitive-functional-dependencies"},"Transitive Functional Dependencies"),(0,l.kt)("p",null,"If ",(0,l.kt)("strong",{parentName:"p"},"A---\x3eB")," and ",(0,l.kt)("strong",{parentName:"p"},"B---\x3eC")," are two Functional Dependencies, then ",(0,l.kt)("strong",{parentName:"p"},"A---\x3eC")," is a TRANSITIVE FUNCTIONAL DEPENDENCY."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Recall:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"If a set of attributes A of a relation uniquely identifies a set of attributes B of the same relation, then B is ",(0,l.kt)("strong",{parentName:"em"},"FUNCTIONALLY DEPENDENT")," on A. Written: A ---\x3e B")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"An attribute that is not part of any candidate key is a ",(0,l.kt)("strong",{parentName:"em"},"NON-PRIME ATTRIBUTE"),"."))),(0,l.kt)("h3",{id:"a-simple-example-of-3nf"},"A simple example of 3NF"),(0,l.kt)("p",null,"Consider the following relation schema: ",(0,l.kt)("inlineCode",{parentName:"p"},"Student_Address (STUDENT_ID, STUDENT_NAME, ZIP, STATE, CITY)")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"It's always important to state your assumptions")),(0,l.kt)("p",null,"Assumptions: Each student has a unique STUDENT_ID and only one address, denoted by ZIP, STATE, CITY"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Review for these concepts:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Super-keys: {STUDENT_ID}, {STUDENT_ID, STUDENT_NAME} and so on\u2026")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Candidate keys: {STUDENT_ID}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Primary key: {STUDENT_ID}")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Non-prime attributes: {STUDENT_NAME, ZIP, STATE, CITY}"))),(0,l.kt)("p",null,"\u2192 \u26a0\ufe0f 2NF holds. "),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"2NF will hold Relation is in 1NF and no non-prime attribute is functionally dependent on a proper subset of any candidate key"),".")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"3NF will hold if there are no TRANSITIVE FUNCTIONAL DEPENDENCIES of NON-PRIME ATTRIBUTES on the primary key."))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ZIP")," is functionally dependent on ",(0,l.kt)("inlineCode",{parentName:"p"},"STUDENT_ID"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"STATE")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"CITY")," is functionally dependent on ",(0,l.kt)("inlineCode",{parentName:"p"},"ZIP"),"."),(0,l.kt)("p",null,"Thus,"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"STUDENT_ID \u2014> ZIP")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ZIP \u2014> {STATE, CITY}"))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("em",{parentName:"p"},"If A \u2014> B and B \u2014> C are two FDs, then A \u2014> C is a transitive functional dependency."))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"{STATE, CITY}")," is transitively functionally dependent on ",(0,l.kt)("inlineCode",{parentName:"p"},"STUDENT_ID"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"STUDENT_ID \u2014> {STATE, CITY}")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"STATE")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"CITY")," are non-prime attributes. ",(0,l.kt)("inlineCode",{parentName:"p"},"STUDENT_ID")," is the primary key."),(0,l.kt)("p",null,"Thus, the relation ",(0,l.kt)("inlineCode",{parentName:"p"},"STUDENT_ADDRESS")," violates third formal form requirements, not in 3NF."),(0,l.kt)("h3",{id:"decompose-into-3nf"},"Decompose into 3NF"),(0,l.kt)("h4",{id:"example-continued"},"Example continued"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Student_Address (STUDENT_ID, STUDENT_NAME, ZIP, STATE, CITY)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"STUDENT_ID \u2014> ZIP")," functional dependency")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ZIP \u2014> {STATE, CITY}")," functional dependency")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"STUDENT_ID \u2014> {STATE, CITY}"),"  transitive functional dependency"))),(0,l.kt)("p",null,"In order to conform with 3NF, we need to ",(0,l.kt)("strong",{parentName:"p"},"remove that transitive functional dependency"),"."),(0,l.kt)("p",null,"Form a new relation that includes all attributes in the schema ",(0,l.kt)("strong",{parentName:"p"},"except those that were transitively determined"),"."),(0,l.kt)("p",null,"New relation schema: SA2 (",(0,l.kt)("u",null,"STUDENT_ID"),", STUDENT_NAME, ZIP) (not include STATE, CITY)"),(0,l.kt)("p",null,"This leaves us with attributes ",(0,l.kt)("inlineCode",{parentName:"p"},"STATE")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"CITY"),"."),(0,l.kt)("p",null,"\u2192 Form a new relation defined on these attributes with ",(0,l.kt)("inlineCode",{parentName:"p"},"ZIP")," as primary key, since ZIP \u2014> {STATE, CITY}"),(0,l.kt)("p",null,"New relation schema: SA3 (",(0,l.kt)("u",null,"ZIP"),", STATE, CITY)"))}u.isMDXComponent=!0}}]);
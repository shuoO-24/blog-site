(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[70],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(n),d=r,N=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return n?a.createElement(N,l(l({ref:t},p),{},{components:n})):a.createElement(N,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var m=2;m<o;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8327:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return m},default:function(){return u}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),l=["components"],i={sidebar_position:2,id:"sqlnorm",title:"Normalization"},s={unversionedId:"SQL Notes/sqlnorm",id:"SQL Notes/sqlnorm",isDocsHomePage:!1,title:"Normalization",description:"Review of last lecture:",source:"@site/docs/SQL Notes/Normalization.md",sourceDirName:"SQL Notes",slug:"/SQL Notes/sqlnorm",permalink:"/docs/SQL Notes/sqlnorm",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/SQL Notes/Normalization.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"sqlnorm",title:"Normalization"},sidebar:"tutorialSidebar",previous:{title:"SQL",permalink:"/docs/SQL Notes/sqlintro"},next:{title:"\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217",permalink:"/docs/Dynamic Programming/\u6700\u957f\u5b50\u5e8f\u5217"}},m=[{value:"WHAT IS A GOOD RELATION DESIGN?",id:"what-is-a-good-relation-design",children:[]},{value:"Normalization",id:"normalization",children:[{value:"Example: Relation TA",id:"example-relation-ta",children:[]}]}],p={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Review of last lecture:\nDeleting relations, large relations, data type, nested selects, views")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Outline:\n",(0,o.kt)("strong",{parentName:"p"},"Normalization"),": update anomaly, insertion anomaly, deletion anomaly, first normal form, functional dependence, second normal form, and example")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.notion.so/lavendershuo/Lecture-18-Normalization-03a84694d3a64e54a5c0622ae4332bac"},"Notion Notes")),(0,o.kt)("h2",{id:"what-is-a-good-relation-design"},"WHAT IS A GOOD RELATION DESIGN?"),(0,o.kt)("p",null,"We have seen how to create a new relation from a given schema."),(0,o.kt)("p",null,"We know that the following ",(0,o.kt)("strong",{parentName:"p"},"rules")," must apply to relations:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Entity Integrity:\nFor each tuple in a relation attributes that belong to the ",(0,o.kt)("strong",{parentName:"li"},"primary")," key must be ",(0,o.kt)("strong",{parentName:"li"},"non-null")),(0,o.kt)("li",{parentName:"ol"},"Referential Integrity:\nAll ",(0,o.kt)("strong",{parentName:"li"},"foreign")," key attribute values in a relation must be either ",(0,o.kt)("strong",{parentName:"li"},"null")," or correspond to a ",(0,o.kt)("strong",{parentName:"li"},"primary")," key value"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Duplication")," of tuples in a relation is ",(0,o.kt)("strong",{parentName:"li"},"not")," allowed."),(0,o.kt)("li",{parentName:"ol"},"Next, we look at: - ",(0,o.kt)("strong",{parentName:"li"},"Normalization"))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"normalization"},"Normalization"),(0,o.kt)("p",null,"Normalization is ",(0,o.kt)("strong",{parentName:"p"},"a technique used to organize the data")," in a database."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Normalization consists of ",(0,o.kt)("strong",{parentName:"li"},"a set of rules")," that all relations must follow for a database(DB) to be well structured."),(0,o.kt)("li",{parentName:"ul"},"These ",(0,o.kt)("strong",{parentName:"li"},"rules")," are presented as sets of restrictions called ",(0,o.kt)("strong",{parentName:"li"},"NORMAL FORMS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"NORMALIZATION")," is the ",(0,o.kt)("strong",{parentName:"li"},"process")," of creating a DB that complies with these ",(0,o.kt)("strong",{parentName:"li"},"restrictions"),". We do that by normalizing each of the relations."),(0,o.kt)("li",{parentName:"ul"},"Normal forms",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"1NF (First Normal Form)"),(0,o.kt)("li",{parentName:"ul"},"2NF (Second Normal Form)"),(0,o.kt)("li",{parentName:"ul"},"3NF (Third Normal Form)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("del",{parentName:"li"},"4NF, 5NF, 6NF......")," It's not always a good idea to normalize beyond 3NF.")))),(0,o.kt)("p",null,"Applying these rules ",(0,o.kt)("strong",{parentName:"p"},"removes undesirable properties")," from a DB, including the ",(0,o.kt)("strong",{parentName:"p"},"removal of data anomalies"),":\n",(0,o.kt)("inlineCode",{parentName:"p"},"UPDATE ANOMALY"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERTION ANOMALY"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"DELETION ANOMAL")),(0,o.kt)("h3",{id:"example-relation-ta"},"Example: Relation TA"),(0,o.kt)("img",{style:{size:"50%"}},"![TA Relation](https://s3.us-west-2.amazonaws.com/secure.notion-static.com/96b8f42d-7d39-4836-9f6c-1c9a2f7c9901/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210602%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210602T222836Z&X-Amz-Expires=86400&X-Amz-Signature=7a6411e633bb3651bd7d344d5412e98b28a8590e9b7010a0713b52b0655be82c&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22Untitled.png%22)"),"The relation TA is not normalized. Why does this matter?",(0,o.kt)("p",null,"What are the CANDIDATE KEYS of TA?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"{TA_ID, TA_DEPT}")),(0,o.kt)("p",null,"What is the PRIMARY KEY of TA?"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"{TA_ID, TA_DEPT}")),(0,o.kt)("div",{style:{color:"tomato"}},(0,o.kt)("h4",null,"UPDATE ANOMALY")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Ann belongs to ",(0,o.kt)("strong",{parentName:"li"},"two departments")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"If Ann's address changes, we will need to update two tuples, to avoid ambiguity"))),(0,o.kt)("div",{style:{color:"tomato"}},(0,o.kt)("h4",null,"INSERTION ANOMALY")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Suppose a new TA has been appointed but does not yet know which department they will work in."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"We cannot put a ",(0,o.kt)("inlineCode",{parentName:"strong"},"NULL")," to ",(0,o.kt)("inlineCode",{parentName:"strong"},"TA_DEPT")," because primary key value cannot be NULL.")))),(0,o.kt)("li",{parentName:"ul"},"We would ",(0,o.kt)("strong",{parentName:"li"},"not be able to INSERT")," the data into the relation. \u2014 INSERTION ANOMALY")),(0,o.kt)("div",{style:{color:"tomato"}},(0,o.kt)("h4",null,"DELETION ANOMALY")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Suppose the BIOLOGY department is closed down")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Deleting tuples with attribute value BIOLOGY in TA_DEPT would delete the information about Bob")," \u2014 we ",(0,o.kt)("strong",{parentName:"li"},"do not want to remove Bob"),"'s TA_ID, TA_ADDRESS, and other information \u2014 thus a DELETION ANOMALY")),(0,o.kt)("div",{style:{color:"white"}},(0,o.kt)("h4",null,"How do we resolve or avoid anomalies?")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"To resolve or avoid anomalies, we need to ",(0,o.kt)("em",{parentName:"li"},"normalize")," relations"),(0,o.kt)("li",{parentName:"ul"},"We will continue the above example later in the lecture, after we have discussed 1NF and 2NF.")))}u.isMDXComponent=!0}}]);